{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/adnangm/Documents/reactNative/news/newsapp1/components/InshortTabs.js\";\nimport React, { useContext, useState } from \"react\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport { TabView, SceneMap } from \"react-native-tab-view\";\nimport { NewsContext } from \"../API/Context\";\nimport DiscoverScreen from \"../Screens/DiscoverScreen\";\nimport NewsScreen from \"../Screens/NewsScreen\";\nimport TopNavigation from \"./TopNavigation\";\nexport default function InshortTabs() {\n  var _this = this;\n\n  var layout = useWindowDimensions();\n\n  var _useContext = useContext(NewsContext),\n      index = _useContext.index,\n      setIndex = _useContext.setIndex;\n\n  var _useState = useState([{\n    key: \"first\",\n    title: \"Discover\"\n  }, {\n    key: \"second\",\n    title: \"News\"\n  }]),\n      _useState2 = _slicedToArray(_useState, 1),\n      routes = _useState2[0];\n\n  var renderScene = SceneMap({\n    first: DiscoverScreen,\n    second: NewsScreen\n  });\n  return React.createElement(TabView, {\n    navigationState: {\n      index: index,\n      routes: routes\n    },\n    renderScene: renderScene,\n    onIndexChange: setIndex,\n    initialLayout: {\n      width: layout.width\n    },\n    renderTabBar: function renderTabBar() {\n      return React.createElement(TopNavigation, {\n        index: index,\n        setIndex: setIndex,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 27\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["/Users/adnangm/Documents/reactNative/news/newsapp1/components/InshortTabs.js"],"names":["React","useContext","useState","TabView","SceneMap","NewsContext","DiscoverScreen","NewsScreen","TopNavigation","InshortTabs","layout","useWindowDimensions","index","setIndex","key","title","routes","renderScene","first","second","width"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;;AAEA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,uBAAlC;AACA,SAASC,WAAT;AACA,OAAOC,cAAP;AACA,OAAOC,UAAP;AACA,OAAOC,aAAP;AAEA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AACpC,MAAMC,MAAM,GAAGC,mBAAmB,EAAlC;;AAEA,oBAA4BV,UAAU,CAACI,WAAD,CAAtC;AAAA,MAAQO,KAAR,eAAQA,KAAR;AAAA,MAAeC,QAAf,eAAeA,QAAf;;AAEA,kBAAiBX,QAAQ,CAAC,CACxB;AAAEY,IAAAA,GAAG,EAAE,OAAP;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GADwB,EAExB;AAAED,IAAAA,GAAG,EAAE,QAAP;AAAiBC,IAAAA,KAAK,EAAE;AAAxB,GAFwB,CAAD,CAAzB;AAAA;AAAA,MAAOC,MAAP;;AAKA,MAAMC,WAAW,GAAGb,QAAQ,CAAC;AAC3Bc,IAAAA,KAAK,EAAEZ,cADoB;AAE3Ba,IAAAA,MAAM,EAAEZ;AAFmB,GAAD,CAA5B;AAKA,SACE,oBAAC,OAAD;AACE,IAAA,eAAe,EAAE;AAAEK,MAAAA,KAAK,EAALA,KAAF;AAASI,MAAAA,MAAM,EAANA;AAAT,KADnB;AAEE,IAAA,WAAW,EAAEC,WAFf;AAGE,IAAA,aAAa,EAAEJ,QAHjB;AAIE,IAAA,aAAa,EAAE;AAAEO,MAAAA,KAAK,EAAEV,MAAM,CAACU;AAAhB,KAJjB;AAKE,IAAA,YAAY,EAAE;AAAA,aAAM,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAER,KAAtB;AAA6B,QAAA,QAAQ,EAAEC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAN;AAAA,KALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AASD","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { useWindowDimensions } from \"react-native\";\nimport { TabView, SceneMap } from \"react-native-tab-view\";\nimport { NewsContext } from \"../API/Context\";\nimport DiscoverScreen from \"../Screens/DiscoverScreen\";\nimport NewsScreen from \"../Screens/NewsScreen\";\nimport TopNavigation from \"./TopNavigation\";\n\nexport default function InshortTabs() {\n  const layout = useWindowDimensions();\n\n  const { index, setIndex } = useContext(NewsContext);\n\n  const [routes] = useState([\n    { key: \"first\", title: \"Discover\" },\n    { key: \"second\", title: \"News\" },\n  ]);\n\n  const renderScene = SceneMap({\n    first: DiscoverScreen,\n    second: NewsScreen,\n  });\n\n  return (\n    <TabView\n      navigationState={{ index, routes }}\n      renderScene={renderScene}\n      onIndexChange={setIndex}\n      initialLayout={{ width: layout.width }}\n      renderTabBar={() => <TopNavigation index={index} setIndex={setIndex} />}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}